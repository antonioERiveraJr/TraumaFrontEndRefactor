import{_ as _t,s as wt,M as jt,q as Dt,r as c,h as j,u as St,p as Ct,N as It,c as v,w as D,o as At,O as ne,d as S,e as Yt,f as le,g as ie,j as a,k as Ot,i as s,m as re,z as m,F as Vt,I as Pt,S as Tt,P as kt,G as de,v as B,Q as ve,R as Q,L as Lt}from"./index-2e67dfd2.js";const Et={components:{Calendar:wt,Column:jt},setup(){const A=new Lt,t=Dt(),T=c(j().subtract(7,"days").toDate()),o=c(j().toDate()),I=St(),R=Ct(),U=c("center"),w=It(),N=c(!1),r=c(new Date(new Date().setDate(new Date().getDate()-7))),p=c(new Date),b=c(!1),Z=c(!1),_=c(),k=c([]),L=c(0),E=c(100),M=c([]),d=c([]),C=c([]),z=c([]),G=c([]),W=c([]),H=c([]),ce=c(!1),q=c([]),J=c([]),K=c([]),Y=c(),O=c(),V=c(),F=c();r.value=j(r.value).format("YYYY-MM-DD"),p.value=j(p.value).format("YYYY-MM-DD");const ge=v(()=>{const e=d.value.length>0,i=M.value.length>0,n=C.value.length>0,l=z.value.length>0,u=G.value.length>0,g=W.value.length>0,Ze=H.value.length>0,$e=q.value.length>0,et=Y.value!==void 0&&Y.value!==null&&Y.value!=="",tt=O.value!==void 0&&O.value!==null&&O.value!=="",at=V.value!==void 0&&V.value!==null&&V.value!=="",st=F.value!==void 0&&F.value!==null&&F.value!=="",ot=J.value.length>0,nt=K.value.length>0;return y.value.filter(f=>{const lt=ot?J.value.some(h=>{const x=h.codep;return f.details&&f.details.forTransportVehicularAccident&&f.details.forTransportVehicularAccident[x]==="Y"}):!0,it=nt?K.value.some(h=>{const x=h.code;return f.details&&f.details.forTransportVehicularAccident&&f.details.forTransportVehicularAccident[x]==="Y"}):!0,rt=e?d.value.some(h=>{const x=h.code;return f.details&&f.details.ExternalCauseOfInjury&&f.details.ExternalCauseOfInjury[x]==="Y"}):!0,dt=(L.value===null||f.header.patage>=L.value)&&(E.value===null||f.header.patage<=E.value),ct=i?M.value.some(h=>{const x=h.code;return f.header&&f.header.patsex===x}):!0,ut=n?C.value.some(h=>{const x=h.code;return f.details&&f.details.natureOfInjury&&f.details.natureOfInjury[x]==="Y"}):!0,ft=l?z.value.some(h=>{const x=h.code;return f.details&&f.details.preAdmissionData&&f.details.preAdmissionData.inj_intent_code===x}):!0,mt=u?G.value.some(h=>{const x=h.code;return f.details&&f.details.hospitalFacilityData&&f.details.hospitalFacilityData.status_code===x}):!0,pt=g?W.value.some(h=>{const x=h.code;return f.details&&f.details.preAdmissionData&&f.details.preAdmissionData.place_occ_code===x}):!0,yt=et?f.details&&f.details.generalData&&f.details.generalData.plc_regcode===Y.value:!0,vt=tt?f.details&&f.details.generalData&&f.details.generalData.plc_provcode===O.value:!0,gt=at?f.details&&f.details.generalData&&f.details.generalData.plc_ctycode===V.value:!0,ht=st?f.details&&f.details.generalData&&f.details.generalData.plc_bgycode===F.value:!0,xt=Ze?H.value.some(h=>{const x=h.code;return f.details&&f.details.preAdmissionData&&f.details.preAdmissionData.activity_code===x}):!0,bt=$e?q.value.some(h=>{const x=h.code;return f.details&&f.details.preAdmissionData&&f.details.preAdmissionData.first_aid_code===x}):!0;return rt&&dt&&ct&&ut&&ft&&mt&&yt&&pt&&vt&&gt&&ht&&xt&&bt&&lt&&it})}),y=c([]),he=v(()=>y.value.filter(e=>e.details&&e.details.ExternalCauseOfInjury&&e.details.ExternalCauseOfInjury.ext_burn_r==="Y")),P=v(()=>y.value.length),$=v(()=>y.value.filter(e=>e.header.patsex==="M").length),ee=v(()=>y.value.filter(e=>e.header.patsex==="F").length),xe=c([{sex:"Male",code:"M"},{sex:"Female",code:"F"},{sex:"All",code:"All"}]),be=v(()=>p.value===null||r.value===null),_e=e=>{U.value=e,N.value=!0},we=async()=>{b.value=!0;try{const e=j(new Date(r.value)).format("YYYY-MM-DD"),i=j(new Date(p.value)).format("YYYY-MM-DD"),l=await new Pt().reportList(!0,e,i,null);if(l&&l.status===401){b.value=!1,console.log("401 Unauthorized"),localStorage.removeItem("authToken"),await Tt.fire({icon:"warning",title:"Session Expired",text:"Please Login Again",confirmButtonText:"OK"}),t.push("/auth/login").then(()=>{window.location.reload()});return}y.value=l.data,_.value=!0,b.value=!1}catch(e){console.error("Error fetching report data:",e),R.value.add({severity:"error",summary:"Error",detail:"Could not fetch report data.",life:3e3}),b.value=!1}},je=v(()=>{const e={};y.value.forEach(l=>{const g=j(new Date(l.header.admdate)).format("YYYY-MM");e[g]||(e[g]=0),e[g]++});const i=P.value;return Object.entries(e).map(([l,u])=>({month:l,count:u,percentage:i?(u/i*100).toFixed(1):0}))}),De=v(()=>{const e={};y.value.forEach(l=>{const u=A.getDispositionCode(l.header.dispcode);l.details&&l.details.ExternalCauseOfInjury,e[u]||(e[u]=0),e[u]++});const i=P.value;return Object.entries(e).map(([l,u])=>({dispCode:l,count:u,percentage:i?(u/i*100).toFixed(1):0}))}),Se=v(()=>{const e={};y.value.forEach(l=>{const u=A.getOutcomeCode(l.header.condcode);e[u]||(e[u]=0),e[u]++});const i=P.value;return Object.entries(e).map(([l,u])=>({condCode:l,count:u,percentage:i?(u/i*100).toFixed(1):0}))}),te=c("Date of Injury"),Ce=c(["Date of Injury","Date of Consultation"]),ue=c(null),fe=c(null);D(te,e=>{te.value=e}),D(T,e=>{T.value=e});let ae=!1;D(r,e=>{r.value=j(new Date(e)).format("MM/DD/YYYY")}),D(p,e=>{p.value=j(new Date(e)).format("MM/DD/YYYY")}),D(o,e=>{if(T.value)ae=!1;else{ae||(R.value.add({severity:"warn",summary:"Warning",detail:"Please select a start date first.",life:3e3}),ae=!0),o.value=null;return}const i=j(e).format("MM/DD/YYYY"),n=j(T.value).format("MM/DD/YYYY");console.log("newend :",i),fe.value=i,ue.value=n});const Ie=v(()=>[{label:"Males ",count:$.value,percentage:`${($.value/P.value*100).toFixed(1)}%`},{label:"Females ",count:ee.value,percentage:`${(ee.value/P.value*100).toFixed(1)}%`},{label:"Total ",count:P.value,percentage:""}]),Ae=v(()=>{const e={bites:0,burns:0,chemicals:0,sharpObjects:0,drownings:0,exposures:0,fall:0,firecrackers:0,vape:0,gunshot:0,hanging:0,mauling:0,transportAccidents:0,sexualAssaults:0,others:0};return y.value.forEach(i=>{const n=i.details&&i.details.ExternalCauseOfInjury;n&&(n.ext_bite==="Y"&&e.bites++,n.ext_burn_r==="Y"&&e.burns++,n.ext_chem==="Y"&&e.chemicals++,n.ext_sharp==="Y"&&e.sharpObjects++,n.ext_drown_r==="Y"&&e.drownings++,n.ext_expo_nature_r==="Y"&&e.exposures++,n.ext_fall==="Y"&&e.fall++,n.ext_firecracker_r==="Y"&&e.firecrackers++,n.ext_vape==="Y"&&e.vape++,n.ext_gun==="Y"&&e.gunshot++,n.ext_hang==="Y"&&e.hanging++,n.ext_maul==="Y"&&e.mauling++,n.ext_transport==="Y"&&e.transportAccidents++,n.ext_sexual==="Y"&&e.sexualAssaults++,n.ext_other==="Y"&&e.others++)}),e}),Ye=v(()=>{const e={};return y.value.forEach(i=>{if(i.details&&i.details.preAdmissionData){const n=A.getPlaceCode(i.details.preAdmissionData.place_occ_code);n&&(e[n]||(e[n]=0),e[n]++)}}),Object.entries(e).map(([i,n])=>({placeCode:i,count:n}))}),Oe=v(()=>{const e={abrasion:0,burns:0,avulsion:0,concussion:0,contusion:0,fractureOpen:0,fractureClosed:0,openWound:0,amputation:0,others:0};return y.value.forEach(i=>{const n=i.details&&i.details.natureOfInjury;n&&(n.noi_abrasion==="Y"&&e.abrasion++,n.noi_burn_r==="Y"&&e.burns++,n.noi_avulsion==="Y"&&e.avulsion++,n.noi_concussion==="Y"&&e.concussion++,n.noi_contusion==="Y"&&e.contusion++,n.noi_frac_ope==="Y"&&e.fractureOpen++,n.noi_frac_clo==="Y"&&e.fractureClosed++,n.noi_owound==="Y"&&e.openWound++,n.noi_amp==="Y"&&e.amputation++,n.noi_others==="Y"&&e.others++)}),e}),Ve=v(()=>{const e={none:0,unknown:0,airbag:0,helmet:0,childseat:0,seatbelt:0,vest:0,other:0};return y.value.forEach(i=>{const n=i.details&&i.details.forTransportVehicularAccident;n&&(n.safe_none==="Y"&&e.none++,n.safe_unkn==="Y"&&e.unknown++,n.safe_airbag==="Y"&&e.airbag++,n.safe_helmet==="Y"&&e.helmet++,n.safe_cseat==="Y"&&e.childseat++,n.safe_sbelt==="Y"&&e.seatbelt++,n.safe_vest==="Y"&&e.vest++,n.safe_other==="Y"&&e.other++)}),e}),Pe=v(()=>{const e={alcohol:0,sleepy:0,smoking:0,using_mobile:0,other:0};return y.value.forEach(i=>{const n=i.details&&i.details.forTransportVehicularAccident;n&&(n.risk_alcliq==="Y"&&e.alcohol++,n.risk_sleep==="Y"&&e.sleepy++,n.risk_smoke==="Y"&&e.smoking++,n.risk_mobpho==="Y"&&e.using_mobile++,n.risk_other==="Y"&&e.other++)}),e}),Te=v(()=>{const e={};return y.value.forEach(i=>{if(i.details&&i.details.preAdmissionData){const n=i.details.preAdmissionData.activity_code,l=A.getActivityCode(n);l&&(e[l]||(e[l]=0),e[l]++)}}),Object.entries(e).map(([i,n])=>({activityCode:i,count:n}))}),ke=v(()=>{const e={};return y.value.forEach(i=>{if(i.details&&i.details.preAdmissionData){const n=i.details.preAdmissionData.inj_intent_code,l=A.getInjuryIntentsCode(n);l&&(e[l]||(e[l]=0),e[l]++)}}),Object.entries(e).map(([i,n])=>({intentCode:i,count:n}))}),X=c([]);async function me(){try{const e=await ne.get("locations/regions",{headers:{Authorization:"Bearer "+localStorage.getItem("authToken")}});e.status===200?Array.isArray(e.data)?X.value=e.data:(console.error("Expected an array but got:",e.data),X.value=[]):e.status===401&&(console.log("401 Unauthorized"),localStorage.removeItem("authToken"),t.push("/login"))}catch(e){console.error("Error fetching regions:",e)}}async function pe(){await w.getRegions(),await w.getProvinces(Y.value),await w.getCities(O.value),await w.getBgys(V.value)}At(async()=>{await pe(),await me(),await Ee(),await ye()}),D(()=>I.details.generalData.plc_regcode,async e=>{e&&(ce.value=!0,I.details.generalData.plc_provcode=null,I.details.generalData.plc_ctycode=null,await w.getProvinces(e),ce.value=!1)}),D(()=>I.details.generalData.plc_provcode,async e=>{I.details.generalData.plc_ctycode=null,await w.getCities(e)}),D(()=>I.details.generalData.plc_ctycode,async e=>{w.getBgys(e)});const Le=v(()=>{const e={},i=new Set,n={};return X.value.forEach(l=>{l.regcode&&(n[l.regcode]=l.regname)}),y.value.forEach(l=>{if(l.details&&l.details.preAdmissionData){const u=l.details.generalData.plc_regcode;u&&i.add(u)}}),y.value.forEach(l=>{if(l.details&&l.details.preAdmissionData){const u=l.details.generalData.plc_regcode;if(u&&n[u]){const g=n[u];g&&(e[g]||(e[g]=0),e[g]++)}}}),Object.entries(e).map(([l,u])=>({regionDescription:l,count:u}))}),se=c([]);async function Ee(){const e=await ne.get("locations/provinceByRegionDesc",{headers:{Authorization:"Bearer "+localStorage.getItem("authToken")}}).then(i=>i).catch(i=>(console.error(i),i.response));return e.status===200&&(Array.isArray(e.data)?se.value=e.data:(console.error("Expected an array but got:",e.data),se.value=[])),e}const Me=v(()=>{const e={},i=new Set,n={};return se.value.forEach(l=>{l.provcode&&(n[l.provcode]=l.provname)}),y.value.forEach(l=>{if(l.details&&l.details.preAdmissionData){const u=l.details.generalData.plc_provcode;u&&i.add(u)}}),y.value.forEach(l=>{if(l.details&&l.details.preAdmissionData){const u=l.details.generalData.plc_provcode;if(u&&n[u]){const g=n[u];g&&(e[g]||(e[g]=0),e[g]++)}}}),Object.entries(e).map(([l,u])=>({provinceDescription:l,count:u}))}),oe=c([]);async function ye(){const e=await ne.get("locations/citiesByProvinceDesc",{headers:{Authorization:"Bearer "+localStorage.getItem("authToken")}}).then(i=>i).catch(i=>(console.error(i),i.response));return e.status===200&&(Array.isArray(e.data)?oe.value=e.data:(console.error("Expected an array but got:",e.data),oe.value=[])),e}const Fe=v(()=>{const e={},i=new Set,n={};return oe.value.forEach(l=>{l.ctycode&&(n[l.ctycode]=l.ctyname)}),y.value.forEach(l=>{if(l.details&&l.details.preAdmissionData){const u=l.details.generalData.plc_ctycode;u&&i.add(u)}}),y.value.forEach(l=>{if(l.details&&l.details.preAdmissionData){const u=l.details.generalData.plc_ctycode;if(u&&n[u]){const g=n[u];g&&(e[g]||(e[g]=0),e[g]++)}}}),Object.entries(e).map(([l,u])=>({citiesDescription:l,count:u}))}),Be=v(()=>{const e={};return y.value.forEach(i=>{if(i.details&&i.details.preAdmissionData){const n=i.details.hospitalFacilityData.status_code,l=A.getStatusReachings(n);l&&(e[l]||(e[l]=0),e[l]++)}}),Object.entries(e).map(([i,n])=>({statusCode:i,count:n}))}),Re=c([{name:"abrasion",code:"noi_abrasion"},{name:"burns",code:"noi_burn_r"},{name:"avulsion",code:"noi_avulsion"},{name:"consussion",code:"noi_concussion"},{name:"contusion",code:"noi_contusion"},{name:"fracture Open",code:"noi_frac_open"},{name:"fracture Closed",code:"noi_frac_clo"},{name:"open Wound",code:"noi_owound"},{name:"amputation",code:"noi_amp"},{name:"others",code:"noi_others"}]),Ue=c([{name:"Bites/Stings",code:"ext_bite"},{name:"Burn",code:"ext_burn_r"},{name:"Chemical Substances",code:"ext_chem"},{name:"Sharp Objects",code:"ext_sharp"},{name:"Drownings",code:"ext_drown_r"},{name:"Exposure to Forces of Nature",code:"ext_expo_nature_r"},{name:"Fall",code:"ext_fall"},{name:"Firecrackers",code:"ext_firecracker_r"},{name:"Vapor/Tobacco",code:"ext_vape"},{name:"Gunshot",code:"ext_gun"},{name:"Hanging",code:"ext_hang"},{name:"Mauling",code:"ext_maul"},{name:"Transport Accidents",code:"ext_transport"},{name:"Sexual Assault",code:"ext_sexual"},{name:"Others",code:"ext_other"}]),Ne=c([{name:"Alcohol",code:"risk_alcliq"},{name:"Sleepy",code:"risk_sleep"},{name:"Smoking",code:"risk_smoke"},{name:"Using Mobile",code:"risk_mobpho"},{name:"Others",code:"risk_other"}]),ze=c([{name:"Unknown",code:"safe_unkn"},{name:"Air",code:"safe_airbag"},{name:"Helmet",code:"safe_helmet"},{name:"Child Seat",code:"safe_cseat"},{name:"Seat Bely",code:"safe_sbelt"},{name:"Life Vest",code:"safe_vest"},{name:"Others",code:"safe_other"}]),Ge=c([{name:"Unintentional/Accident",code:"01"},{name:"Intentional (Violence)",code:"02"},{name:"Intentional (Self-inflicted)",code:"03"},{name:"Undetermined",code:"99"}]),We=c([{name:"Dead on Arrival",code:"01l"},{name:"Alive - Unconscious",code:"02"},{name:"Alive - Conscious",code:"03"}]),He=c([{name:"Home",code:"10"},{name:"Road/Highway",code:"50"},{name:"School",code:"30"},{name:"Videoke Bars",code:"60"},{name:"Workplace",code:"70"},{name:"Unknown",code:"99"},{name:"Others",code:"88"}]),qe=c([{name:"Work",code:"30"},{name:"Leisure",code:"20"},{name:"Sports",code:"10"},{name:"Unknown",code:"99"},{name:"Others",code:"88"}]),Je=c([{name:"No",code:"N"},{name:"Yes",code:"Y"},{name:"Unknown",code:"U"}]),Ke=c([{name:"Male",code:"M"},{name:"Female",code:"F"}]),Xe=c({name:{operator:kt.AND,constraints:[{value:null,matchMode:de.STARTS_WITH}]},global:{value:null,matchMode:de.CONTAINS},injurytypes:{value:null,matchMode:de.IN}});D([],e=>{console.log(`Age range updated: From ${e[0]} to ${e[1]}`)}),D(()=>[F,V,O,Y],e=>{console.log("Selected location changed:",e),pe()}),D(()=>[L,E,M.value,d.value,C.value,z.value,G.value,W.value,H.value,q.value,J,K],e=>{},{deep:!0});const Qe=c();return{firstAidGivenList:Je,activityList:qe,selectedCity:V,selectedBarangay:F,selectedProvince:O,placeOfOccurrenceList:He,statusList:We,injuryIntentList:Ge,selectedInjuryIntent:z,selectedSex:M,selectedStatusList:G,selectedActivityList:H,selectedFirstAid:q,genderList:Ke,startDate:T,endDate:o,getCitiesDesc:ye,selectedPreAdmission:C,preadmissionList:Re,getRegions:me,value:te,injuryByStatus:Be,customers:Qe,selectedRegion:Y,externalList:Ue,monthlyInjuryStats:je,options:Ce,regions:X,locationsStore:w,injuryByPOI:Le,selectedSafety:J,selectedRisk:K,savedStartDate:ue,totalInjury:Ie,savedEndDate:fe,patientStore:I,selectedPlaceOfOccurence:W,visible:N,safetyList:ze,position:U,toast:R,filterModel:k,openPosition:_e,ageFrom:L,riskFactorList:Ne,ageTo:E,gender:xe,dateFrom:r,dateTo:p,generateReport:we,selectedExternal:d,reportData:y,filteredDataTest:he,filteredReportData:ge,dataTableVisible:_,totalReports:P,maleCount:$,femaleCount:ee,loading:b,dispositionInjuryStats:De,outcomeInjuryStats:Se,externalCauseCounts:Ae,filters:Xe,injuryByPlaceOfOccurrence:Ye,listDialogVisible:Z,injuryByPreAdmission:Oe,injuryBySafety:Ve,injuryByRiskFactor:Pe,injuryByActivity:Te,injuryByIntent:ke,isRefreshDisabled:be,injuryByPOIProvince:Me,injuryByPOICities:Fe}}},Mt={key:0,class:"loading-overlay"},Ft={class:"flex justify-content-center"},Bt={class:"flex flex-column mx-2"},Rt={class:"flex flex-column mx-2"},Ut={class:"flex justify-end mx-2"},Nt={class:"flex justify-content-between mt-2 align-items-center"},zt={class:"grid grid-cols-2 justify-content-center"},Gt={class:"flex-1 mt-4 mb-3 mr-1"},Wt={class:"grid grid-cols-2 justify-content-center"},Ht={class:"flex-1 mr-1"},qt={class:"grid grid-cols-2"},Jt={class:"flex-1 mr-1"},Kt={class:"grid grid-cols-2 justify-content-center"},Xt={class:"flex-1 mr-1"},Qt={class:"grid flex-1 justify-content-center"},Zt={class:"flex-1 mb-3"},$t={class:"grid grid-cols-1 justify-content-center"},ea={class:"flex-1 mr-1"},ta={class:"grid grid-cols-1 justify-content-center"},aa={class:"flex-1 mr-1"},sa={class:"grid grid-cols-1 justify-content-center"},oa={class:"flex-1 mr-1"},na={class:"grid grid-cols-1 justify-content-center"},la={class:"flex-1 mr-1"},ia={class:"grid grid-cols-1 justify-content-center"},ra={class:"flex-1 mr-1"},da={class:"grid grid-cols-1 justify-content-center"},ca={class:"flex-1 mr-1"},ua={class:"grid grid-cols-3 justify-content-center"},fa={class:"flex-1 mr-1"},ma={class:"flex-1 mr-1"},pa={class:"flex-1 mr-1"},ya={class:"grid grid-cols-1 justify-content-center"},va={class:"flex-1 mr-1"},ga={class:"flex"},ha={class:"flex justify-content-center"},xa={class:"card flex justify-content-center"},ba={class:"grid grid-rows-4 grid-flow-col gap-4"},_a={class:"flex flex-column"},wa={class:"flex flex-column mx-2"},ja={class:"flex flex-column mx-2"},Da={class:"flex flex-column mx-2"},Sa={class:"flex flex-column mx-2"},Ca={class:"flex flex-column mx-2"},Ia={class:"flex flex-column mx-2"},Aa={class:"flex flex-column mx-2"},Ya={class:"flex flex-column mx-2"},Oa={class:"flex flex-column mx-2"},Va={class:"flex flex-column mx-2"},Pa={class:"flex items-center"},Ta={class:"flex items-center"},ka={class:"flex flex-column"},La={class:"flex flex-column"},Ea={class:"flex flex-column"},Ma={class:"flex flex-column"},Fa={class:"card"};function Ba(A,t,T,o,I,R){const U=S("ProgressSpinner"),w=S("Calendar"),N=S("Button"),r=S("Column"),p=S("DataTable"),b=S("TabPanel"),Z=S("TabView"),_=S("MultiSelect"),k=S("Dropdown"),L=S("Dialog"),E=S("Toast"),M=Yt("tooltip");return le(),ie(Vt,null,[o.loading?(le(),ie("div",Mt,[a(U,{style:{width:"50px",height:"50px"},strokeWidth:"8",fill:"var(--surface-ground)",animationDuration:".5s","aria-label":"Custom ProgressSpinner"})])):Ot("",!0),s("div",Ft,[s("div",Bt,[t[22]||(t[22]=s("strong",{style:{"font-size":"8px"}},"FROM DATE:",-1)),a(w,{modelValue:o.dateFrom,"onUpdate:modelValue":t[0]||(t[0]=d=>o.dateFrom=d),dateFormat:"dd/mm/yy",showIcon:"",class:"w-full",todayButton:!0,showButtonBar:!0},null,8,["modelValue"])]),s("div",Rt,[t[23]||(t[23]=s("strong",{style:{"font-size":"8px"}},"TO DATE:",-1)),a(w,{modelValue:o.dateTo,"onUpdate:modelValue":t[1]||(t[1]=d=>o.dateTo=d),dateFormat:"dd/mm/yy",showIcon:"",class:"w-full",todayButton:!0,showButtonBar:!0},null,8,["modelValue"])]),s("div",Ut,[a(N,{type:"button",label:"GENERATE",onClick:o.generateReport,disabled:o.isRefreshDisabled,style:{"font-size":"10px",padding:"0px 8px"}},null,8,["onClick","disabled"])])]),s("div",Nt,[re((le(),ie("i",{class:"pi pi-list clickable-icon",style:{cursor:"pointer","font-size":"1.5em"},onClick:t[2]||(t[2]=d=>o.listDialogVisible=!0)},t[24]||(t[24]=[s("strong",{class:"ml-2"},"LIST",-1)]))),[[M,"List of Patients"]])]),s("div",null,[s("div",zt,[s("div",Gt,[t[25]||(t[25]=s("strong",{class:"flex justify-content-center"},"Total Injury",-1)),a(p,{value:o.totalInjury,class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"label",header:"TOTAL INJURY",style:{width:"40%"}}),a(r,{field:"count",header:"Count",style:{width:"30%"}}),a(r,{field:"percentage",header:"Percentage",style:{width:"30%"}})]),_:1},8,["value"])])]),s("div",Wt,[s("div",Ht,[t[26]||(t[26]=s("strong",{class:"flex justify-content-center"},"Monthly Injury",-1)),a(p,{value:o.monthlyInjuryStats,class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"month",header:"Month",style:{width:"40%"}}),a(r,{field:"count",header:"Count",style:{width:"30%"}}),a(r,{field:"percentage",header:"Percentage",style:{width:"30%"}})]),_:1},8,["value"])])]),a(Z,{scrollable:!0,class:"mt-4"},{default:m(()=>[a(b,{header:"Injury by Disposition"},{default:m(()=>[s("div",qt,[s("div",Jt,[t[27]||(t[27]=s("strong",{class:"flex justify-content-center"},"Injury by Disposition",-1)),a(p,{value:o.dispositionInjuryStats,class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"dispCode",header:"Disposition Code",style:{width:"40%"}}),a(r,{field:"count",header:"Count",style:{width:"30%"}}),a(r,{field:"percentage",header:"Percentage",style:{width:"30%"}})]),_:1},8,["value"])])])]),_:1}),a(b,{header:"Injury by Outcome"},{default:m(()=>[s("div",Kt,[s("div",Xt,[t[28]||(t[28]=s("strong",{class:"flex justify-content-center"},"Injury by Outcome",-1)),a(p,{value:o.outcomeInjuryStats,class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"condCode",header:"Outcome Code",style:{width:"40%"}}),a(r,{field:"count",header:"Count",style:{width:"30%"}}),a(r,{field:"percentage",header:"Percentage",style:{width:"30%"}})]),_:1},8,["value"])])])]),_:1}),a(b,{header:"Injury by External Injury"},{default:m(()=>[s("div",Qt,[s("div",Zt,[t[29]||(t[29]=s("strong",{class:"flex justify-content-center"},"External Cause of Injury Counts",-1)),a(p,{value:[o.externalCauseCounts],class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"bites",header:"Bites/Stings"}),a(r,{field:"burns",header:"Burns"}),a(r,{field:"chemicals",header:"Chemical Substances"}),a(r,{field:"sharpObjects",header:"Sharp Objects"}),a(r,{field:"drownings",header:"Drownings"}),a(r,{field:"exposures",header:"Exposure to Forces of Nature"}),a(r,{field:"fall",header:"Fall"}),a(r,{field:"firecrackers",header:"Firecrackers"}),a(r,{field:"vape",header:"Vapor/Tobacco"}),a(r,{field:"gunshot",header:"Gunshot"}),a(r,{field:"hanging",header:"Hanging"}),a(r,{field:"mauling",header:"Mauling"}),a(r,{field:"transportAccidents",header:"Transport Accidents"}),a(r,{field:"sexualAssaults",header:"Sexual Assault"}),a(r,{field:"others",header:"Others"})]),_:1},8,["value"])])])]),_:1}),a(b,{header:"Injury by Place of Occurence"},{default:m(()=>[s("div",$t,[s("div",ea,[t[30]||(t[30]=s("strong",{class:"flex justify-content-center"},"Injury by Place of Occurrence",-1)),a(p,{value:o.injuryByPlaceOfOccurrence,class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"placeCode",header:"Place of Occurrence",style:{width:"60%"}}),a(r,{field:"count",header:"Count",style:{width:"40%"}})]),_:1},8,["value"])])])]),_:1}),a(b,{header:" Injury by Pre Admission"},{default:m(()=>[s("div",ta,[s("div",aa,[t[31]||(t[31]=s("strong",{class:"flex justify-content-center"},"Injury by Pre-Admission",-1)),a(p,{value:Object.entries(o.injuryByPreAdmission).map(([d,C])=>({injuryType:d,count:C})),class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"injuryType",header:"Injury Type",style:{width:"60%"}}),a(r,{field:"count",header:"Count",style:{width:"40%"}})]),_:1},8,["value"])])])]),_:1}),a(b,{header:" Injury by Safety"},{default:m(()=>[s("div",sa,[s("div",oa,[t[32]||(t[32]=s("strong",{class:"flex justify-content-center"},"Safety Measures",-1)),a(p,{value:Object.entries(o.injuryBySafety).map(([d,C])=>({safetyType:d,count:C})),class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"safetyType",header:"Safety Type",style:{width:"60%"}}),a(r,{field:"count",header:"Count",style:{width:"40%"}})]),_:1},8,["value"])])])]),_:1}),a(b,{header:"Injury by Risk Factor"},{default:m(()=>[s("div",na,[s("div",la,[t[33]||(t[33]=s("strong",{class:"flex justify-content-center"},"Risk Factors",-1)),a(p,{value:Object.entries(o.injuryByRiskFactor).map(([d,C])=>({riskType:d,count:C})),class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"riskType",header:"Risk Factor",style:{width:"60%"}}),a(r,{field:"count",header:"Count",style:{width:"40%"}})]),_:1},8,["value"])])])]),_:1}),a(b,{header:"Injury by Activity"},{default:m(()=>[s("div",ia,[s("div",ra,[t[34]||(t[34]=s("strong",{class:"flex justify-content-center"},"Injury by Activity",-1)),a(p,{value:o.injuryByActivity,class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"activityCode",header:"Activity",style:{width:"60%"}}),a(r,{field:"count",header:"Count",style:{width:"40%"}})]),_:1},8,["value"])])])]),_:1}),a(b,{header:" Injury by Intent"},{default:m(()=>[s("div",da,[s("div",ca,[t[35]||(t[35]=s("strong",{class:"flex justify-content-center"},"Injury by Intent",-1)),a(p,{value:o.injuryByIntent,class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"intentCode",header:"Injury Intent",style:{width:"60%"}}),a(r,{field:"count",header:"Count",style:{width:"40%"}})]),_:1},8,["value"])])])]),_:1}),a(b,{header:" Injury by POI"},{default:m(()=>[s("div",ua,[s("div",fa,[a(p,{value:o.injuryByPOI,class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"regionDescription",header:"Region of Injury",style:{width:"60%"}}),a(r,{field:"count",header:"Count",style:{width:"40%"}})]),_:1},8,["value"])]),s("div",ma,[a(p,{value:o.injuryByPOIProvince,class:"p-datatable-striped small-table bordered-table"},{default:m(()=>[a(r,{field:"provinceDescription",header:"Province of Injury",style:{width:"60%"}}),a(r,{field:"count",header:"Count"})]),_:1},8,["value"])]),s("div",pa,[a(p,{value:o.injuryByPOICities,class:"p-datatable-striped small-table bordered-table"},{default:m(()=>[a(r,{field:"citiesDescription",header:"City of Injury",style:{width:"60%"}}),a(r,{field:"count",header:"Count"})]),_:1},8,["value"])])])]),_:1}),a(b,{header:" Injury by Status"},{default:m(()=>[s("div",ya,[s("div",va,[t[36]||(t[36]=s("strong",{class:"flex justify-content-center"},"Injury by Status",-1)),a(p,{value:o.injuryByStatus,class:"p-datatable-striped small-table bordered-table",paginator:!1},{default:m(()=>[a(r,{field:"statusCode",header:"Injury Status",style:{width:"60%"}}),a(r,{field:"count",header:"Count",style:{width:"40%"}})]),_:1},8,["value"])])])]),_:1})]),_:1})]),a(L,{visible:o.listDialogVisible,"onUpdate:visible":t[20]||(t[20]=d=>o.listDialogVisible=d),style:{width:"90%",height:"100%"},modal:!0,filters:o.filters,"onUpdate:filters":t[21]||(t[21]=d=>o.filters=d)},{header:m(()=>[s("div",ga,[s("h4",ha,"DATE: "+B(o.dateFrom)+" to "+B(o.dateTo)+"   ",1)])]),default:m(()=>[s("div",xa,[s("div",ba,[s("div",_a,[t[37]||(t[37]=s("strong",{style:{"font-size":"8px"}},"SEX:",-1)),a(_,{modelValue:o.selectedSex,"onUpdate:modelValue":t[3]||(t[3]=d=>o.selectedSex=d),options:o.genderList,filter:"",optionLabel:"name",placeholder:"Select Gender",maxSelectedLabels:2,class:"w-1/2 md:w-1/2 mr-2"},null,8,["modelValue","options"])]),s("div",wa,[t[38]||(t[38]=s("strong",{style:{"font-size":"8px"}},"EXTERNAL CAUSE:",-1)),a(_,{modelValue:o.selectedExternal,"onUpdate:modelValue":t[4]||(t[4]=d=>o.selectedExternal=d),options:o.externalList,filter:"",optionLabel:"name",placeholder:"External Cause",maxSelectedLabels:15,class:"w-1/2 md:w-1/2 mr-2"},null,8,["modelValue","options"])]),s("div",ja,[t[39]||(t[39]=s("strong",{style:{"font-size":"8px"}},"PRE-ADMISSION:",-1)),a(_,{modelValue:o.selectedPreAdmission,"onUpdate:modelValue":t[5]||(t[5]=d=>o.selectedPreAdmission=d),options:o.preadmissionList,filter:"",optionLabel:"name",placeholder:"Pre-Admission",maxSelectedLabels:15,class:"w-1/2 md:w-1/2 mr-2"},null,8,["modelValue","options"])]),s("div",Da,[t[40]||(t[40]=s("strong",{style:{"font-size":"8px"}},"INJURY INTENT:",-1)),a(_,{modelValue:o.selectedInjuryIntent,"onUpdate:modelValue":t[6]||(t[6]=d=>o.selectedInjuryIntent=d),options:o.injuryIntentList,filter:"",optionLabel:"name",placeholder:"Injury Intent",maxSelectedLabels:15,class:"w-1/2 md:w-1/2 mr-2"},null,8,["modelValue","options"])]),s("div",Sa,[t[41]||(t[41]=s("strong",{style:{"font-size":"8px"}},"STATUS:",-1)),a(_,{modelValue:o.selectedStatusList,"onUpdate:modelValue":t[7]||(t[7]=d=>o.selectedStatusList=d),options:o.statusList,filter:"",optionLabel:"name",placeholder:"Status",maxSelectedLabels:15,class:"w-1/2 md:w-1/2 mr-2"},null,8,["modelValue","options"])]),s("div",Ca,[t[42]||(t[42]=s("strong",{style:{"font-size":"8px"}},"PLACE OF OCCURRENCE:",-1)),a(_,{modelValue:o.selectedPlaceOfOccurence,"onUpdate:modelValue":t[8]||(t[8]=d=>o.selectedPlaceOfOccurence=d),options:o.placeOfOccurrenceList,filter:"",optionLabel:"name",placeholder:"Place of Occurrence",maxSelectedLabels:15,class:"w-1/2 md:w-1/2 mr-2"},null,8,["modelValue","options"])]),s("div",Ia,[t[43]||(t[43]=s("strong",{style:{"font-size":"8px"}},"ACTIVITY:",-1)),a(_,{modelValue:o.selectedActivityList,"onUpdate:modelValue":t[9]||(t[9]=d=>o.selectedActivityList=d),options:o.activityList,filter:"",optionLabel:"name",placeholder:"Activity",maxSelectedLabels:15,class:"w-1/2 md:w-1/2 mr-2"},null,8,["modelValue","options"])]),s("div",Aa,[t[44]||(t[44]=s("strong",{style:{"font-size":"8px"}},"FIRST AID GIVEN:",-1)),a(_,{modelValue:o.selectedFirstAid,"onUpdate:modelValue":t[10]||(t[10]=d=>o.selectedFirstAid=d),options:o.firstAidGivenList,filter:"",optionLabel:"name",placeholder:"First Aid Given",maxSelectedLabels:15,class:"w-1/2 md:w-1/2"},null,8,["modelValue","options"])]),s("div",Ya,[t[45]||(t[45]=s("strong",{style:{"font-size":"8px"}},"SAFETY:",-1)),a(_,{modelValue:o.selectedSafety,"onUpdate:modelValue":t[11]||(t[11]=d=>o.selectedSafety=d),options:o.safetyList,filter:"",optionLabel:"name",placeholder:"Safety",maxSelectedLabels:15,class:"w-1/2 md:w-1/2 mr-2"},null,8,["modelValue","options"])]),s("div",Oa,[t[46]||(t[46]=s("strong",{style:{"font-size":"8px"}},"RISK FACTOR:",-1)),a(_,{modelValue:o.selectedRisk,"onUpdate:modelValue":t[12]||(t[12]=d=>o.selectedRisk=d),options:o.riskFactorList,filter:"",optionLabel:"name",placeholder:"Risk Factor",maxSelectedLabels:15,class:"w-1/2 md:w-1/2 mr-2"},null,8,["modelValue","options"])]),s("div",Va,[t[47]||(t[47]=s("strong",{style:{"font-size":"8px"}},"AGE RANGE:",-1)),s("div",Pa,[re(s("input",{type:"range","onUpdate:modelValue":t[13]||(t[13]=d=>o.ageFrom=d),min:"0",max:"100",class:"w-1/2 mr-2"},null,512),[[ve,o.ageFrom]]),s("span",null,B(o.ageFrom),1)]),s("div",Ta,[re(s("input",{type:"range","onUpdate:modelValue":t[14]||(t[14]=d=>o.ageTo=d),min:"0",max:"100",class:"w-1/2 mr-2"},null,512),[[ve,o.ageTo]]),s("span",null,B(o.ageTo),1)]),s("div",null,[s("strong",null,"Selected Age Range: "+B(o.ageFrom)+" - "+B(o.ageTo),1)])]),s("div",ka,[t[48]||(t[48]=s("div",{class:"flex justify-content-between w-1/2 md:w-1/2"},[s("strong",{style:{"font-size":"8px"},for:"generalData.plc_regcode"},"POI REGION")],-1)),a(k,{showClear:"",id:"selectedRegion",modelValue:o.selectedRegion,"onUpdate:modelValue":t[15]||(t[15]=d=>o.selectedRegion=d),options:o.locationsStore.regions,optionLabel:"regname",optionValue:"regcode",class:Q({"p-inputtext-filled  mb-2 w-1/2 md:w-1/2 ":!0})},null,8,["modelValue","options"])]),s("div",La,[t[49]||(t[49]=s("div",{class:"flex justify-content-between w-1/2 md:w-1/2"},[s("strong",{style:{"font-size":"8px"},for:"generalData.plc_provcode"},"POI PROVINCE")],-1)),a(k,{showClear:"",id:"selectedProvince",modelValue:o.selectedProvince,"onUpdate:modelValue":t[16]||(t[16]=d=>o.selectedProvince=d),options:o.locationsStore.provinces,optionLabel:"provname",optionValue:"provcode",class:Q({"p-inputtext-filled  mb-2 w-1/2 md:w-1/2":!0})},null,8,["modelValue","options"])]),s("div",Ea,[t[50]||(t[50]=s("div",{class:"flex justify-content-between w-1/2 md:w-1/2"},[s("strong",{style:{"font-size":"8px"},for:"generalData.plc_ctycode"},"POI CITY")],-1)),a(k,{showClear:"",id:"selectedCity",modelValue:o.selectedCity,"onUpdate:modelValue":t[17]||(t[17]=d=>o.selectedCity=d),options:o.locationsStore.citys,optionLabel:"ctyname",optionValue:"ctycode",class:Q({"p-inputtext-filled  mb-2 w-1/2 md:w-1/2 ":!0})},null,8,["modelValue","options"])]),s("div",Ma,[t[51]||(t[51]=s("div",{class:"flex justify-content-between w-1/2 md:w-1/2"},[s("strong",{style:{"font-size":"8px"},for:"generalData.plc_ctycode"},"POI BARANGGAY")],-1)),a(k,{showClear:"",id:"selectedBarangay",modelValue:o.selectedBarangay,"onUpdate:modelValue":t[18]||(t[18]=d=>o.selectedBarangay=d),options:o.locationsStore.bgys,optionLabel:"bgyname",optionValue:"bgycode",class:Q({"p-inputtext-filled  mb-2 w-full md:w-1/2":!0})},null,8,["modelValue","options"])])])]),s("div",Fa,[a(p,{value:o.filteredReportData,class:"p-datatable-striped small-table bordered-table",paginator:!0,rows:10,filters:o.filters,"onUpdate:filters":t[19]||(t[19]=d=>o.filters=d),paginatorTemplate:"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown",rowsPerPageOptions:[5,10,25],filterDisplay:"menu",currentPageReportTemplate:"Showing {first} to {last} of {totalRecords} products"},{default:m(()=>[a(r,{field:"header.patname",header:"Name"}),a(r,{field:"header.patage",header:"Age"}),a(r,{field:"header.patsex",header:"Sex"}),a(r,{field:"header.injrem",header:"Nature of Injury"}),a(r,{field:"header.injtme",header:"Date"})]),_:1},8,["value","filters"])])]),_:1},8,["visible","filters"]),a(E,{ref:"toast"},null,512)],64)}const Ua=_t(Et,[["render",Ba],["__scopeId","data-v-f8376edf"]]);export{Ua as default};
